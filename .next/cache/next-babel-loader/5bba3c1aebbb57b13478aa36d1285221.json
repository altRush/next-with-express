{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\n\nvar _this = this,\n    _jsxFileName = \"D:\\\\Coding\\\\Javascript\\\\play\\\\next-express-demo\\\\pages\\\\index.js\";\n\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport Link from 'next/link'; // import fetch from 'isomorphic-unfetch'\n\nvar index = function index() {\n  return __jsx(React.Fragment, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 5,\n      columnNumber: 5\n    }\n  }, __jsx(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 6,\n      columnNumber: 7\n    }\n  }, \"Hello\"), __jsx(Link, {\n    href: \"/about\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 7,\n      columnNumber: 7\n    }\n  }, __jsx(\"a\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 9\n    }\n  }, \"About\")));\n};\n\nIndex.getInitialProps = /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n  var shows;\n  return _regeneratorRuntime.wrap(function _callee$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.next = 2;\n          return fetch('https://api.tvmaze.com/search/show?g=sherlock').then(function (res) {\n            return res.json();\n          }).then(function (entry) {\n            return entry.show;\n          });\n\n        case 2:\n          shows = _context.sent;\n          console.log('Rendering...');\n          return _context.abrupt(\"return\", shows);\n\n        case 5:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, _callee);\n}));\nexport default index;","map":{"version":3,"sources":["D:/Coding/Javascript/play/next-express-demo/pages/index.js"],"names":["Link","index","Index","getInitialProps","fetch","then","res","json","entry","show","shows","console","log"],"mappings":";;;;;;;;AAAA,OAAOA,IAAP,MAAiB,WAAjB,C,CACA;;AACA,IAAMC,KAAK,GAAG,SAARA,KAAQ,GAAM;AAClB,SACE,MAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aADF,EAEE,MAAC,IAAD;AAAM,IAAA,IAAI,EAAC,QAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aADF,CAFF,CADF;AAQD,CATD;;AAWAC,KAAK,CAACC,eAAN,yEAAwB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBACFC,KAAK,CAAC,+CAAD,CAAL,CACjBC,IADiB,CACZ,UAAAC,GAAG;AAAA,mBAAIA,GAAG,CAACC,IAAJ,EAAJ;AAAA,WADS,EAEjBF,IAFiB,CAEZ,UAAAG,KAAK;AAAA,mBAAIA,KAAK,CAACC,IAAV;AAAA,WAFO,CADE;;AAAA;AAChBC,UAAAA,KADgB;AAKtBC,UAAAA,OAAO,CAACC,GAAR,CAAY,cAAZ;AALsB,2CAOfF,KAPe;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAAxB;AAUA,eAAeT,KAAf","sourcesContent":["import Link from 'next/link'\r\n// import fetch from 'isomorphic-unfetch'\r\nconst index = () => {\r\n  return (\r\n    <React.Fragment>\r\n      <div>Hello</div>\r\n      <Link href=\"/about\">\r\n        <a>About</a>\r\n      </Link>\r\n    </React.Fragment>\r\n  )\r\n}\r\n\r\nIndex.getInitialProps = async () => {\r\n  const shows = await fetch('https://api.tvmaze.com/search/show?g=sherlock')\r\n    .then(res => res.json())\r\n    .then(entry => entry.show)\r\n\r\n  console.log('Rendering...')\r\n\r\n  return shows\r\n}\r\n\r\nexport default index\r\n"]},"metadata":{},"sourceType":"module"}